package org.example;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.example.messaging.ClientMessageReceiver;

public class ClientNode extends Node {
    private static final Logger logger = LogManager.getLogger(ClientNode.class);

    public ClientNode(String nodeId) {
        super(nodeId);
//        this.sender = new ClientMessageSender(nodeId, commLogger, auth);
        this.receiver = new ClientMessageReceiver(this, auth);
    }

    /**
     * Generates a ClientRequest proto message.
     *
     * @param transaction The transaction object (from the class generated by grpc)
     * @return ClientRequest proto message
     */
    private MessageServiceOuterClass.ClientRequest generateClientRequest(MessageServiceOuterClass.Transaction transaction) {
        long timestamp = System.currentTimeMillis();
        MessageServiceOuterClass.Operation op = MessageServiceOuterClass.Operation.newBuilder()
                .setTransfer(transaction)
                .build();
        return MessageServiceOuterClass.ClientRequest.newBuilder().setOperation(op).setTimestamp(timestamp).setClientId(transaction.getSender()).build();
    }

    public void processTransaction(MessageServiceOuterClass.Transaction transaction) {
        MessageServiceOuterClass.ClientRequest clientRequest = generateClientRequest(transaction);
    }

}